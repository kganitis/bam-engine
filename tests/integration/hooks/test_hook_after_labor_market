import numpy as np
from bamengine.scheduler import Scheduler

def zero_out_inventory(sched: Scheduler) -> None:
    """Callback that sets all firm inventories to 0."""
    sched.prod.inventory[:] = 0.0

def test_after_event2_hook_forces_no_inventory() -> None:
    sch = Scheduler.init(n_firms=10, n_households=40, seed=123)

    # --- period t --------------------------------------------------------
    sch.step(after_event2=zero_out_inventory)

    # After our hook, inventory must indeed be zero
    assert np.allclose(sch.prod.inventory, 0.0)

    # --- period t+1 ------------------------------------------------------
    # plan again; with zero stock every firm is eligible for the “up” branch
    p_avg = float(sch.prod.price.mean())
    from bamengine.systems.planning import firms_decide_desired_production
    firms_decide_desired_production(sch.prod, p_avg, sch.h_rho, sch.rng)

    # Each firm’s desired production should be >= its previous output
    assert (sch.prod.desired_production >= sch.prod.prev_production).all()
